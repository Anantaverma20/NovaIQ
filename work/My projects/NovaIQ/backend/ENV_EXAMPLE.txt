# ========================================
# RTC Backend Environment Configuration
# ========================================
# Copy this file to .env and fill in your values
# File: backend/.env

# === OpenAI Configuration (Optional - Required for full features) ===
# Get your API key from: https://platform.openai.com/api-keys
# Without this key:
#   - Vector operations are disabled
#   - Insight generation is disabled
#   - Hypothesis generation is disabled
#   - Q&A still works with keyword fallback
OPENAI_API_KEY=

# OpenAI models (defaults are fine for most cases)
OPENAI_MODEL=gpt-4o-mini
OPENAI_EMBEDDING_MODEL=text-embedding-3-small

# === External Search API (Optional - Required for automated ingestion) ===
# You.com API: https://api.you.com/
# Brave Search: https://brave.com/search/api/
# Without this key:
#   - Manual article submission still works
#   - Scheduled ingestion is skipped
SEARCH_API_KEY=
SEARCH_API_BASE_URL=https://api.you.com

# === Database Configuration ===
# SQLite (default - good for development and small deployments)
DATABASE_URL=sqlite:///./data/novaiq.db

# PostgreSQL (recommended for production)
# DATABASE_URL=postgresql://user:password@localhost:5432/rtc
# Note: Install psycopg2-binary if using PostgreSQL

# === Vector Store Configuration ===
# ChromaDB persistence directory
CHROMA_PERSIST_DIR=./data/chroma

# Enable/disable vector operations (auto-disabled if no OpenAI key)
ENABLE_VECTORS=true

# === Ingestion Configuration ===
# Default search query for automated ingestion
INGESTION_QUERY=AI research breakthrough

# Maximum articles to fetch per ingestion run
INGESTION_MAX_RESULTS=20

# Webhook secret for secure cron triggers (recommended for production)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
INGESTION_WEBHOOK_SECRET=

# === CORS Configuration ===
# Comma-separated list of allowed origins for frontend
# For development with Next.js on port 3000:
ALLOWED_ORIGINS=["http://localhost:3000","http://localhost:8000"]

# For production, replace with your actual domain:
# ALLOWED_ORIGINS=["https://your-frontend.com"]

# === Rate Limiting ===
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW_SECONDS=60

# === HTTP Retry Configuration ===
HTTP_RETRY_MAX_ATTEMPTS=3
HTTP_RETRY_WAIT_MIN_SECONDS=1.0
HTTP_RETRY_WAIT_MAX_SECONDS=10.0

# ========================================
# Quick Start Configurations
# ========================================

# --- Minimal (No API Keys) ---
# Just uncomment DATABASE_URL and ALLOWED_ORIGINS above
# Features: Database, health checks, article viewing
# Missing: Vectors, LLM features, automated ingestion

# --- With OpenAI Only ---
# Set: OPENAI_API_KEY
# Features: Everything except automated ingestion
# You can manually add articles via API

# --- Full Features ---
# Set: OPENAI_API_KEY, SEARCH_API_KEY
# Features: Everything enabled

# ========================================
# Production Checklist
# ========================================
# [ ] Set OPENAI_API_KEY
# [ ] Set SEARCH_API_KEY (if using automated ingestion)
# [ ] Set INGESTION_WEBHOOK_SECRET
# [ ] Configure ALLOWED_ORIGINS for your frontend
# [ ] Consider PostgreSQL for DATABASE_URL
# [ ] Enable HTTPS in production
# [ ] Set up monitoring/logging

